# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

font_family Delugia

#: }}}

#: Scrollback {{{

# https://github.com/kovidgoyal/kitty/issues/719#issuecomment-950123627
scrollback_pager bash -c 'nvim -c "map q :qa!<CR>" -c "terminal cat "<(cat)" - " -c "map i <Nop>" -c "set clipboard+=unnamedplus laststatus=0" -c "call cursor(CURSOR_LINE, CURSOR_COLUMN)"'

#: }}}

#: Mouse {{{

url_color #0087bd
url_style single

url_prefixes http https file ftp gemini irc gopher mailto news git

strip_trailing_spaces smart

#: }}}

#: Performance tuning {{{

repaint_delay 10

#: Delay (in milliseconds) between screen updates. Decreasing it,
#: increases frames-per-second (FPS) at the cost of more CPU usage.
#: The default value yields ~100 FPS which is more than sufficient for
#: most uses. Note that to actually achieve 100 FPS you have to either
#: set sync_to_monitor to no or use a monitor with a high refresh
#: rate. Also, to minimize latency when there is pending input to be
#: processed, repaint_delay is ignored.

input_delay 3

#: Delay (in milliseconds) before input from the program running in
#: the terminal is processed. Note that decreasing it will increase
#: responsiveness, but also increase CPU usage and might cause flicker
#: in full screen programs that redraw the entire screen on each loop,
#: because kitty is so fast that partial screen updates will be drawn.

sync_to_monitor yes

#: Sync screen updates to the refresh rate of the monitor. This
#: prevents tearing (https://en.wikipedia.org/wiki/Screen_tearing)
#: when scrolling. However, it limits the rendering speed to the
#: refresh rate of your monitor. With a very high speed mouse/high
#: keyboard repeat rate, you may notice some slight input latency. If
#: so, set this to no.

#: }}}

#: Tab bar {{{

tab_bar_edge top

tab_bar_margin_height 0 10

#: }}}

#: Window decorations {{{

hide_window_decorations yes

#: }}}

#: Color scheme {{{

background_opacity 0.8

include ./catppuccin.conf

#: }}}

